services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tasksdb}
      POSTGRES_USER: ${POSTGRES_USER:-tasks}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tasks}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tasks} -d ${POSTGRES_DB:-tasksdb}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      LOG_LEVEL: info
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://tasks:tasks@db:5432/tasksdb}
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    command: ["/bin/sh", "-c", "./entrypoint.sh"]
    volumes:
      # optional: Spezifikationen schreibgeschÃ¼tzt mounten, falls vorhanden
      - ./docs/specs:/app/docs/specs:ro

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    working_dir: /usr/src/app
    command: >
      sh -c "npm ci &&
             npm run start -- --host 0.0.0.0 --port 4200 --proxy-config proxy.conf.json"
    environment:
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "4200:4200"
    volumes:
      - ./ui:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - api

volumes:
  pgdata:
